{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dimaag\\\\Documents\\\\Python_Class\\\\ML\\\\Calorie-count-project\\\\frontend\\\\caloriecount\\\\src\\\\MainApp.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import axios from 'axios';\n\n// function MainApp() {\n\n//   const [userData, setUserData] = useState({\n//     userId: '',\n//     Gender: '',\n//     Age: '',\n//     Height: '',\n//     Weight: '',\n//     Duration: '',\n//     Heart_Rate: '',\n//     Body_Temp: '',\n//   });\n\n//   const handleChange = (e) => {\n//     setUserData({\n//       ...userData,\n//       [e.target.name]: e.target.value,\n//     });\n//   };\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     // const resu = await axios.post('http://192.168.50.62:5000/save', { data: userData });\n//     fetch('http://192.168.50.179:5000/save', {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json',\n//       },\n//       body: JSON.stringify(userData), // Convert userData to JSON format\n//     })\n//       .then((response) => response.json()) // Parse the JSON response\n//       .then((data) => {\n//         if (data.success) {\n//           alert(data.message); // Show success message\n//         } else {\n//           alert(data.message); // Show error message if success is false\n//         }\n\n//         // Reset form fields after submission\n//         setUserData({\n//           userId: '',\n//           Gender: '',\n//           Age: '',\n//           Height: '',\n//           Weight: '',\n//           Duration: '',\n//           Heart_Rate: '',\n//           Body_Temp: '',\n//         });\n//       })\n//       .catch((error) => {\n//         console.error('There was an error saving the data!', error);\n//         alert('An error occurred while saving the data. Please try again.');\n//       });\n//   };\n\n//   const [userId, setUserId] = useState(\"\");\n//   const [result, setResult] = useState(null);\n\n//   const handleUserIdChange = (e) => {\n//     setUserId(e.target.value);\n//   };\n\n//   const calculateResult = () => {\n//     axios.get(`http://192.168.50.179:5000/res?userId=${userId}`)\n//       .then(response => {\n//         if (response.data.result) {\n//           setResult(response.data.result[\"0\"] + \" calories\");\n//         } else {\n//           setResult(\"No data found for this User ID\");\n//         }\n//       })\n//       .catch(error => {\n//         console.error(\"Error fetching data: \", error);\n//         setResult(\"No data found for the provided UserId\");\n//       });\n//   };\n\n// //   const [res, setRes] = useState(null);\n// //   const handleDietQuery = async () => {\n// //   try {\n// //     const res = await fetch('http://192.168.50.179:5000/query', {\n// //       method: 'POST',\n// //       headers: {\n// //         'Content-Type': 'application/json',\n// //       },\n// //       body: JSON.stringify({ query: 'What is the best diet for weight loss ?' }),\n// //     });\n\n// //     const data = await response.json();\n// //     console.log('Diet plan result:', data.result);  // Replace with UI display logic\n// //     alert(`Response: ${data.result}`);  // For testing\n// //     setRes(data.result);\n// //   } catch (error) {\n// //     console.error('Error fetching diet plan:', error);\n// //   }\n// // };\n// const [currentWeight, setCurrentWeight] = useState('');\n//   const [targetWeight, setTargetWeight] = useState('');\n//   const [displayedText, setDisplayedText] = useState('');\n//   const [res, setRes] = useState(null);\n\n//   const handleDietQuery = async () => {\n//     if (!currentWeight || !targetWeight) {\n//       alert('Please enter both weights');\n//       return;\n//     }\n\n//     const cw = parseFloat(currentWeight);\n//     const tw = parseFloat(targetWeight);\n\n//     if (isNaN(cw) || isNaN(tw)) {\n//       alert('Weights must be valid numbers');\n//       return;\n//     }\n\n//     const query =\n//       cw > tw\n//         ? 'What is the best diet plan for weight loss?'\n//         : 'What is the best diet plan for weight gain?';\n\n//     try {\n//       const response = await fetch('http://192.168.50.179:5000/query', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify({ query }),\n//       });\n\n//       const data = await response.json();\n//       const words = data.result.split(' ');\n\n//       setRes(data.result);\n//       setDisplayedText('');\n\n//       let index = 0;\n//       const interval = setInterval(() => {\n//         if (index < words.length) {\n//           setDisplayedText((prev) => prev + words[index] + ' ');\n//           index++;\n//         } else {\n//           clearInterval(interval);\n//         }\n//       }, 150);\n//     } catch (error) {\n//       console.error('Error fetching diet plan:', error);\n//       setDisplayedText('Failed to fetch result.');\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <nav className =\"navbar\">\n//         <span style={{ fontWeight: 'bold', fontSize: '100px' }}></span>\n//         <div>\n//           <button onClick={() => window.location.href = '/'} style={{ color: 'Black', marginRight: '50px', background: 'none', border: 'none', cursor: 'pointer' }}>\n//   Home</button>\n//           <button onClick={handleDietQuery} style={{ color: 'Black', marginRight: '50px', background: 'none', border: 'none', cursor: 'pointer' }}>\n//   Diet plan\n// </button>\n//         </div>\n//       </nav>\n\n//       <div style={{ padding: '20px' }}>\n//         <h1>Health Data Collection</h1>\n//         <form onSubmit={handleSubmit}>\n//           <input\n//             type=\"number\"\n//             name=\"userId\"\n//             placeholder=\"User ID\"\n//             value={userData.userId}\n//             onChange={handleChange}\n//             required\n//           /><br />\n\n//           <label htmlFor=\"dropdown\"></label>\n//           <select id=\"dropdown\"\n//             name='Gender' value={userData.Gender} onChange={handleChange}>\n//             <option value=\"\">Gender</option>\n//             <option value=\"0\">0 (women)</option>\n//             <option value=\"1\">1(men)</option>\n//           </select>\n//           <br />\n\n//           <input\n//             type=\"number\"\n//             name=\"Age\"\n//             placeholder=\"Age\"\n//             value={userData.Age}\n//             onChange={handleChange}\n//             required\n//           /><br />\n\n//           <input\n//             type=\"number\"\n//             name=\"Height\"\n//             placeholder=\"Height (cm)\"\n//             value={userData.Height}\n//             onChange={handleChange}\n//             required\n//           /><br />\n\n//           <input\n//             type=\"number\"\n//             name=\"Weight\"\n//             placeholder=\"Weight (kg)\"\n//             value={userData.Weight}\n//             onChange={handleChange}\n//             required\n//           /><br />\n\n//           <input\n//             type=\"number\"\n//             name=\"Duration\"\n//             placeholder=\"Duration (min)\"\n//             value={userData.Duration}\n//             onChange={handleChange}\n//             required\n//           /><br />\n\n//           <input\n//             type=\"number\"\n//             name=\"Heart_Rate\"\n//             placeholder=\"Heart Rate\"\n//             value={userData.Heart_Rate}\n//             onChange={handleChange}\n//             required\n//           /><br />\n\n//           <input\n//             type=\"number\"\n//             name=\"Body_Temp\"\n//             placeholder=\"Body Temperature\"\n//             value={userData.Body_Temp}\n//             onChange={handleChange}\n//             required\n//           /><br />\n\n//           <button type=\"submit\">Save Data</button>\n//         </form>\n\n//         <div style={{ marginTop: '20px' }}>\n//           <h2>Calculate Calories</h2>\n//           <input\n//             type=\"number\"\n//             placeholder=\"Enter User ID\"\n//             value={userId}\n//             onChange={handleUserIdChange}\n//             required\n//           />\n//           <button onClick={calculateResult}>Calculate</button>\n//         </div>\n\n//         {result && (\n//           <div style={{\n//             border: '1px solid #ccc',\n//             padding: '10px',\n//             marginTop: '10px',\n//             borderRadius: '5px',\n//             backgroundColor: '#f9f9f9',\n//             width: '200px',\n//             textAlign: 'center',\n//           }}>\n//             <span>{result}</span>\n\n//           </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n//    <div style={{ padding: '30px', fontFamily: 'Arial', maxWidth: '600px', margin: '0 auto' }}>\n//       <h2>Diet Plan Generator</h2>\n\n//       <div style={{ marginBottom: '15px' }}>\n//         <label>Current Weight (kg): </label>\n//         <input\n//           type=\"number\"\n//           value={currentWeight}\n//           onChange={(e) => setCurrentWeight(e.target.value)}\n//           style={{ padding: '8px', marginLeft: '10px' }}\n//         />\n//       </div>\n\n//       <div style={{ marginBottom: '20px' }}>\n//         <label>Target Weight (kg): </label>\n//         <input\n//           type=\"number\"\n//           value={targetWeight}\n//           onChange={(e) => setTargetWeight(e.target.value)}\n//           style={{ padding: '8px', marginLeft: '23px' }}\n//         />\n//       </div>\n\n//       <button onClick={handleDietQuery} style={{ padding: '10px 20px' }}>\n//         Get Diet Plan\n//       </button>\n\n//       {displayedText && (\n//         <div\n//           style={{\n//             marginTop: '30px',\n//             padding: '15px',\n//             backgroundColor: '#f9f9f9',\n//             borderRadius: '8px',\n//             fontSize: '17px',\n//             minHeight: '60px',\n//             lineHeight: '1.6',\n//             whiteSpace: 'pre-wrap',\n//           }}\n//         >\n//           {displayedText}\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default MainApp;\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MainApp() {\n  _s();\n  const [userData, setUserData] = useState({\n    userId: '',\n    Gender: '',\n    Age: '',\n    Height: '',\n    Weight: '',\n    Duration: '',\n    Heart_Rate: '',\n    Body_Temp: ''\n  });\n  const [userId, setUserId] = useState('');\n  const [result, setResult] = useState(null);\n  const [currentWeight, setCurrentWeight] = useState('');\n  const [targetWeight, setTargetWeight] = useState('');\n  const [displayedText, setDisplayedText] = useState('');\n  const [res, setRes] = useState(null);\n  const handleChange = e => {\n    setUserData({\n      ...userData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    fetch('http://192.168.50.179:5000/save', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(userData)\n    }).then(response => response.json()).then(data => {\n      alert(data.message);\n      setUserData({\n        userId: '',\n        Gender: '',\n        Age: '',\n        Height: '',\n        Weight: '',\n        Duration: '',\n        Heart_Rate: '',\n        Body_Temp: ''\n      });\n    }).catch(error => {\n      console.error('There was an error saving the data!', error);\n      alert('An error occurred while saving the data.');\n    });\n  };\n  const handleUserIdChange = e => {\n    setUserId(e.target.value);\n  };\n  const calculateResult = () => {\n    axios.get(`http://192.168.50.179:5000/res?userId=${userId}`).then(response => {\n      if (response.data.result) {\n        setResult(response.data.result['0'] + ' calories');\n      } else {\n        setResult('No data found for this User ID');\n      }\n    }).catch(error => {\n      console.error('Error fetching data: ', error);\n      setResult('No data found for the provided UserId');\n    });\n  };\n  const handleDietQuery = async () => {\n    if (!currentWeight || !targetWeight) {\n      alert('Please enter both weights');\n      return;\n    }\n    const cw = parseFloat(currentWeight);\n    const tw = parseFloat(targetWeight);\n    if (isNaN(cw) || isNaN(tw)) {\n      alert('Weights must be valid numbers');\n      return;\n    }\n    const query = cw > tw ? 'What is the best diet plan for weight loss?' : 'What is the best diet plan for weight gain?';\n    try {\n      const response = await fetch('http://192.168.50.179:5000/query', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          query\n        })\n      });\n      const data = await response.json();\n      const words = data.result.split(' ');\n      setRes(data.result);\n      setDisplayedText('');\n      let index = 0;\n      const interval = setInterval(() => {\n        if (index < words.length) {\n          setDisplayedText(prev => prev + words[index] + ' ');\n          index++;\n        } else {\n          clearInterval(interval);\n        }\n      }, 150);\n    } catch (error) {\n      console.error('Error fetching diet plan:', error);\n      setDisplayedText('Failed to fetch result.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar\",\n      style: {\n        padding: '10px',\n        background: '#f1f1f1'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          fontWeight: 'bold',\n          fontSize: '20px'\n        },\n        children: \"Health App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => window.location.href = '/',\n          style: {\n            color: 'black',\n            marginRight: '50px',\n            background: 'none',\n            border: 'none',\n            cursor: 'pointer'\n          },\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleDietQuery,\n          style: {\n            color: 'black',\n            marginRight: '50px',\n            background: 'none',\n            border: 'none',\n            cursor: 'pointer'\n          },\n          children: \"Diet plan\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Health Data Collection\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"userId\",\n          placeholder: \"User ID\",\n          value: userData.userId,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 127\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"Gender\",\n          value: userData.Gender,\n          onChange: handleChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Gender\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 486,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"0\",\n            children: \"0 (Women)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 487,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"1\",\n            children: \"1 (Men)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 488,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"Age\",\n          placeholder: \"Age\",\n          value: userData.Age,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 117\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"Height\",\n          placeholder: \"Height (cm)\",\n          value: userData.Height,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 131\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"Weight\",\n          placeholder: \"Weight (kg)\",\n          value: userData.Weight,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 131\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"Duration\",\n          placeholder: \"Duration (min)\",\n          value: userData.Duration,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 494,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 494,\n          columnNumber: 138\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"Heart_Rate\",\n          placeholder: \"Heart Rate\",\n          value: userData.Heart_Rate,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 138\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"Body_Temp\",\n          placeholder: \"Body Temperature\",\n          value: userData.Body_Temp,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 142\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Save Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Calculate Calories\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 502,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"Enter User ID\",\n          value: userId,\n          onChange: handleUserIdChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 503,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: calculateResult,\n          children: \"Calculate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 501,\n        columnNumber: 9\n      }, this), result && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          border: '1px solid #ccc',\n          padding: '10px',\n          marginTop: '10px',\n          borderRadius: '5px',\n          backgroundColor: '#f9f9f9',\n          width: '200px',\n          textAlign: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: result\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 523,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '40px',\n          fontFamily: 'Arial',\n          maxWidth: '600px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Diet Plan Generator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 528,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '15px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Current Weight (kg): \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 531,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: currentWeight,\n            onChange: e => setCurrentWeight(e.target.value),\n            style: {\n              padding: '8px',\n              marginLeft: '10px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 532,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 530,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Target Weight (kg): \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 541,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: targetWeight,\n            onChange: e => setTargetWeight(e.target.value),\n            style: {\n              padding: '8px',\n              marginLeft: '23px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 542,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 540,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleDietQuery,\n          style: {\n            padding: '10px 20px'\n          },\n          children: \"Get Diet Plan\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 550,\n          columnNumber: 11\n        }, this), displayedText && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '30px',\n            padding: '15px',\n            backgroundColor: '#f9f9f9',\n            borderRadius: '8px',\n            fontSize: '17px',\n            minHeight: '60px',\n            lineHeight: '1.6',\n            whiteSpace: 'pre-wrap'\n          },\n          children: data.displayedText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 527,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 461,\n    columnNumber: 5\n  }, this);\n}\n_s(MainApp, \"Od80WdPHSIHYod/Gtz2+PV8aTL4=\");\n_c = MainApp;\nexport default MainApp;\nvar _c;\n$RefreshReg$(_c, \"MainApp\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","MainApp","_s","userData","setUserData","userId","Gender","Age","Height","Weight","Duration","Heart_Rate","Body_Temp","setUserId","result","setResult","currentWeight","setCurrentWeight","targetWeight","setTargetWeight","displayedText","setDisplayedText","res","setRes","handleChange","e","target","name","value","handleSubmit","preventDefault","fetch","method","headers","body","JSON","stringify","then","response","json","data","alert","message","catch","error","console","handleUserIdChange","calculateResult","get","handleDietQuery","cw","parseFloat","tw","isNaN","query","words","split","index","interval","setInterval","length","prev","clearInterval","children","className","style","padding","background","fontWeight","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","onClick","window","location","href","color","marginRight","border","cursor","onSubmit","type","placeholder","onChange","required","marginTop","borderRadius","backgroundColor","width","textAlign","fontFamily","maxWidth","marginBottom","marginLeft","minHeight","lineHeight","whiteSpace","_c","$RefreshReg$"],"sources":["C:/Users/dimaag/Documents/Python_Class/ML/Calorie-count-project/frontend/caloriecount/src/MainApp.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import axios from 'axios';\r\n\r\n// function MainApp() {\r\n\r\n//   const [userData, setUserData] = useState({\r\n//     userId: '',\r\n//     Gender: '',\r\n//     Age: '',\r\n//     Height: '',\r\n//     Weight: '',\r\n//     Duration: '',\r\n//     Heart_Rate: '',\r\n//     Body_Temp: '',\r\n//   });\r\n\r\n//   const handleChange = (e) => {\r\n//     setUserData({\r\n//       ...userData,\r\n//       [e.target.name]: e.target.value,\r\n//     });\r\n//   };\r\n\r\n//   const handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n//     // const resu = await axios.post('http://192.168.50.62:5000/save', { data: userData });\r\n//     fetch('http://192.168.50.179:5000/save', {\r\n//       method: 'POST',\r\n//       headers: {\r\n//         'Content-Type': 'application/json',\r\n//       },\r\n//       body: JSON.stringify(userData), // Convert userData to JSON format\r\n//     })\r\n//       .then((response) => response.json()) // Parse the JSON response\r\n//       .then((data) => {\r\n//         if (data.success) {\r\n//           alert(data.message); // Show success message\r\n//         } else {\r\n//           alert(data.message); // Show error message if success is false\r\n//         }\r\n\r\n//         // Reset form fields after submission\r\n//         setUserData({\r\n//           userId: '',\r\n//           Gender: '',\r\n//           Age: '',\r\n//           Height: '',\r\n//           Weight: '',\r\n//           Duration: '',\r\n//           Heart_Rate: '',\r\n//           Body_Temp: '',\r\n//         });\r\n//       })\r\n//       .catch((error) => {\r\n//         console.error('There was an error saving the data!', error);\r\n//         alert('An error occurred while saving the data. Please try again.');\r\n//       });\r\n//   };\r\n\r\n//   const [userId, setUserId] = useState(\"\");\r\n//   const [result, setResult] = useState(null);\r\n\r\n//   const handleUserIdChange = (e) => {\r\n//     setUserId(e.target.value);\r\n//   };\r\n\r\n//   const calculateResult = () => {\r\n//     axios.get(`http://192.168.50.179:5000/res?userId=${userId}`)\r\n//       .then(response => {\r\n//         if (response.data.result) {\r\n//           setResult(response.data.result[\"0\"] + \" calories\");\r\n//         } else {\r\n//           setResult(\"No data found for this User ID\");\r\n//         }\r\n//       })\r\n//       .catch(error => {\r\n//         console.error(\"Error fetching data: \", error);\r\n//         setResult(\"No data found for the provided UserId\");\r\n//       });\r\n//   };\r\n\r\n// //   const [res, setRes] = useState(null);\r\n// //   const handleDietQuery = async () => {\r\n// //   try {\r\n// //     const res = await fetch('http://192.168.50.179:5000/query', {\r\n// //       method: 'POST',\r\n// //       headers: {\r\n// //         'Content-Type': 'application/json',\r\n// //       },\r\n// //       body: JSON.stringify({ query: 'What is the best diet for weight loss ?' }),\r\n// //     });\r\n\r\n// //     const data = await response.json();\r\n// //     console.log('Diet plan result:', data.result);  // Replace with UI display logic\r\n// //     alert(`Response: ${data.result}`);  // For testing\r\n// //     setRes(data.result);\r\n// //   } catch (error) {\r\n// //     console.error('Error fetching diet plan:', error);\r\n// //   }\r\n// // };\r\n// const [currentWeight, setCurrentWeight] = useState('');\r\n//   const [targetWeight, setTargetWeight] = useState('');\r\n//   const [displayedText, setDisplayedText] = useState('');\r\n//   const [res, setRes] = useState(null);\r\n\r\n//   const handleDietQuery = async () => {\r\n//     if (!currentWeight || !targetWeight) {\r\n//       alert('Please enter both weights');\r\n//       return;\r\n//     }\r\n\r\n//     const cw = parseFloat(currentWeight);\r\n//     const tw = parseFloat(targetWeight);\r\n\r\n//     if (isNaN(cw) || isNaN(tw)) {\r\n//       alert('Weights must be valid numbers');\r\n//       return;\r\n//     }\r\n\r\n//     const query =\r\n//       cw > tw\r\n//         ? 'What is the best diet plan for weight loss?'\r\n//         : 'What is the best diet plan for weight gain?';\r\n\r\n//     try {\r\n//       const response = await fetch('http://192.168.50.179:5000/query', {\r\n//         method: 'POST',\r\n//         headers: {\r\n//           'Content-Type': 'application/json',\r\n//         },\r\n//         body: JSON.stringify({ query }),\r\n//       });\r\n\r\n//       const data = await response.json();\r\n//       const words = data.result.split(' ');\r\n\r\n//       setRes(data.result);\r\n//       setDisplayedText('');\r\n\r\n//       let index = 0;\r\n//       const interval = setInterval(() => {\r\n//         if (index < words.length) {\r\n//           setDisplayedText((prev) => prev + words[index] + ' ');\r\n//           index++;\r\n//         } else {\r\n//           clearInterval(interval);\r\n//         }\r\n//       }, 150);\r\n//     } catch (error) {\r\n//       console.error('Error fetching diet plan:', error);\r\n//       setDisplayedText('Failed to fetch result.');\r\n//     }\r\n//   };\r\n\r\n \r\n\r\n//   return (\r\n//     <div>\r\n//       <nav className =\"navbar\">\r\n//         <span style={{ fontWeight: 'bold', fontSize: '100px' }}></span>\r\n//         <div>\r\n//           <button onClick={() => window.location.href = '/'} style={{ color: 'Black', marginRight: '50px', background: 'none', border: 'none', cursor: 'pointer' }}>\r\n//   Home</button>\r\n//           <button onClick={handleDietQuery} style={{ color: 'Black', marginRight: '50px', background: 'none', border: 'none', cursor: 'pointer' }}>\r\n//   Diet plan\r\n// </button>\r\n//         </div>\r\n//       </nav>\r\n    \r\n//       <div style={{ padding: '20px' }}>\r\n//         <h1>Health Data Collection</h1>\r\n//         <form onSubmit={handleSubmit}>\r\n//           <input\r\n//             type=\"number\"\r\n//             name=\"userId\"\r\n//             placeholder=\"User ID\"\r\n//             value={userData.userId}\r\n//             onChange={handleChange}\r\n//             required\r\n//           /><br />\r\n\r\n//           <label htmlFor=\"dropdown\"></label>\r\n//           <select id=\"dropdown\"\r\n//             name='Gender' value={userData.Gender} onChange={handleChange}>\r\n//             <option value=\"\">Gender</option>\r\n//             <option value=\"0\">0 (women)</option>\r\n//             <option value=\"1\">1(men)</option>\r\n//           </select>\r\n//           <br />\r\n\r\n//           <input\r\n//             type=\"number\"\r\n//             name=\"Age\"\r\n//             placeholder=\"Age\"\r\n//             value={userData.Age}\r\n//             onChange={handleChange}\r\n//             required\r\n//           /><br />\r\n\r\n//           <input\r\n//             type=\"number\"\r\n//             name=\"Height\"\r\n//             placeholder=\"Height (cm)\"\r\n//             value={userData.Height}\r\n//             onChange={handleChange}\r\n//             required\r\n//           /><br />\r\n\r\n//           <input\r\n//             type=\"number\"\r\n//             name=\"Weight\"\r\n//             placeholder=\"Weight (kg)\"\r\n//             value={userData.Weight}\r\n//             onChange={handleChange}\r\n//             required\r\n//           /><br />\r\n\r\n//           <input\r\n//             type=\"number\"\r\n//             name=\"Duration\"\r\n//             placeholder=\"Duration (min)\"\r\n//             value={userData.Duration}\r\n//             onChange={handleChange}\r\n//             required\r\n//           /><br />\r\n\r\n//           <input\r\n//             type=\"number\"\r\n//             name=\"Heart_Rate\"\r\n//             placeholder=\"Heart Rate\"\r\n//             value={userData.Heart_Rate}\r\n//             onChange={handleChange}\r\n//             required\r\n//           /><br />\r\n\r\n//           <input\r\n//             type=\"number\"\r\n//             name=\"Body_Temp\"\r\n//             placeholder=\"Body Temperature\"\r\n//             value={userData.Body_Temp}\r\n//             onChange={handleChange}\r\n//             required\r\n//           /><br />\r\n\r\n//           <button type=\"submit\">Save Data</button>\r\n//         </form>\r\n\r\n//         <div style={{ marginTop: '20px' }}>\r\n//           <h2>Calculate Calories</h2>\r\n//           <input\r\n//             type=\"number\"\r\n//             placeholder=\"Enter User ID\"\r\n//             value={userId}\r\n//             onChange={handleUserIdChange}\r\n//             required\r\n//           />\r\n//           <button onClick={calculateResult}>Calculate</button>\r\n//         </div>\r\n\r\n//         {result && (\r\n//           <div style={{\r\n//             border: '1px solid #ccc',\r\n//             padding: '10px',\r\n//             marginTop: '10px',\r\n//             borderRadius: '5px',\r\n//             backgroundColor: '#f9f9f9',\r\n//             width: '200px',\r\n//             textAlign: 'center',\r\n//           }}>\r\n//             <span>{result}</span>\r\n\r\n//           </div>\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n//    <div style={{ padding: '30px', fontFamily: 'Arial', maxWidth: '600px', margin: '0 auto' }}>\r\n//       <h2>Diet Plan Generator</h2>\r\n\r\n//       <div style={{ marginBottom: '15px' }}>\r\n//         <label>Current Weight (kg): </label>\r\n//         <input\r\n//           type=\"number\"\r\n//           value={currentWeight}\r\n//           onChange={(e) => setCurrentWeight(e.target.value)}\r\n//           style={{ padding: '8px', marginLeft: '10px' }}\r\n//         />\r\n//       </div>\r\n\r\n//       <div style={{ marginBottom: '20px' }}>\r\n//         <label>Target Weight (kg): </label>\r\n//         <input\r\n//           type=\"number\"\r\n//           value={targetWeight}\r\n//           onChange={(e) => setTargetWeight(e.target.value)}\r\n//           style={{ padding: '8px', marginLeft: '23px' }}\r\n//         />\r\n//       </div>\r\n\r\n//       <button onClick={handleDietQuery} style={{ padding: '10px 20px' }}>\r\n//         Get Diet Plan\r\n//       </button>\r\n\r\n//       {displayedText && (\r\n//         <div\r\n//           style={{\r\n//             marginTop: '30px',\r\n//             padding: '15px',\r\n//             backgroundColor: '#f9f9f9',\r\n//             borderRadius: '8px',\r\n//             fontSize: '17px',\r\n//             minHeight: '60px',\r\n//             lineHeight: '1.6',\r\n//             whiteSpace: 'pre-wrap',\r\n//           }}\r\n//         >\r\n//           {displayedText}\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n// export default MainApp;\r\n\r\n\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction MainApp() {\r\n  const [userData, setUserData] = useState({\r\n    userId: '',\r\n    Gender: '',\r\n    Age: '',\r\n    Height: '',\r\n    Weight: '',\r\n    Duration: '',\r\n    Heart_Rate: '',\r\n    Body_Temp: '',\r\n  });\r\n\r\n  const [userId, setUserId] = useState('');\r\n  const [result, setResult] = useState(null);\r\n\r\n  const [currentWeight, setCurrentWeight] = useState('');\r\n  const [targetWeight, setTargetWeight] = useState('');\r\n  const [displayedText, setDisplayedText] = useState('');\r\n  const [res, setRes] = useState(null);\r\n\r\n  const handleChange = (e) => {\r\n    setUserData({\r\n      ...userData,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    fetch('http://192.168.50.179:5000/save', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(userData),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        alert(data.message);\r\n        setUserData({\r\n          userId: '',\r\n          Gender: '',\r\n          Age: '',\r\n          Height: '',\r\n          Weight: '',\r\n          Duration: '',\r\n          Heart_Rate: '',\r\n          Body_Temp: '',\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.error('There was an error saving the data!', error);\r\n        alert('An error occurred while saving the data.');\r\n      });\r\n  };\r\n\r\n  const handleUserIdChange = (e) => {\r\n    setUserId(e.target.value);\r\n  };\r\n\r\n  const calculateResult = () => {\r\n    axios\r\n      .get(`http://192.168.50.179:5000/res?userId=${userId}`)\r\n      .then((response) => {\r\n        if (response.data.result) {\r\n          setResult(response.data.result['0'] + ' calories');\r\n        } else {\r\n          setResult('No data found for this User ID');\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching data: ', error);\r\n        setResult('No data found for the provided UserId');\r\n      });\r\n  };\r\n\r\n  const handleDietQuery = async () => {\r\n    if (!currentWeight || !targetWeight) {\r\n      alert('Please enter both weights');\r\n      return;\r\n    }\r\n\r\n    const cw = parseFloat(currentWeight);\r\n    const tw = parseFloat(targetWeight);\r\n\r\n    if (isNaN(cw) || isNaN(tw)) {\r\n      alert('Weights must be valid numbers');\r\n      return;\r\n    }\r\n\r\n    const query =\r\n      cw > tw\r\n        ? 'What is the best diet plan for weight loss?'\r\n        : 'What is the best diet plan for weight gain?';\r\n\r\n    try {\r\n      const response = await fetch('http://192.168.50.179:5000/query', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ query }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      const words = data.result.split(' ');\r\n\r\n      setRes(data.result);\r\n      setDisplayedText('');\r\n\r\n      let index = 0;\r\n      const interval = setInterval(() => {\r\n        if (index < words.length) {\r\n          setDisplayedText((prev) => prev + words[index] + ' ');\r\n          index++;\r\n        } else {\r\n          clearInterval(interval);\r\n        }\r\n      }, 150);\r\n    } catch (error) {\r\n      console.error('Error fetching diet plan:', error);\r\n      setDisplayedText('Failed to fetch result.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <nav className=\"navbar\" style={{ padding: '10px', background: '#f1f1f1' }}>\r\n        <span style={{ fontWeight: 'bold', fontSize: '20px' }}>Health App</span>\r\n        <div>\r\n          <button\r\n            onClick={() => window.location.href = '/'}\r\n            style={{ color: 'black', marginRight: '50px', background: 'none', border: 'none', cursor: 'pointer' }}\r\n          >\r\n            Home\r\n          </button>\r\n          <button\r\n            onClick={handleDietQuery}\r\n            style={{ color: 'black', marginRight: '50px', background: 'none', border: 'none', cursor: 'pointer' }}\r\n          >\r\n            Diet plan\r\n          </button>\r\n        </div>\r\n      </nav>\r\n\r\n      <div style={{ padding: '20px' }}>\r\n        <h1>Health Data Collection</h1>\r\n        <form onSubmit={handleSubmit}>\r\n          <input type=\"number\" name=\"userId\" placeholder=\"User ID\" value={userData.userId} onChange={handleChange} required /><br />\r\n\r\n          <select name=\"Gender\" value={userData.Gender} onChange={handleChange}>\r\n            <option value=\"\">Gender</option>\r\n            <option value=\"0\">0 (Women)</option>\r\n            <option value=\"1\">1 (Men)</option>\r\n          </select><br />\r\n\r\n          <input type=\"number\" name=\"Age\" placeholder=\"Age\" value={userData.Age} onChange={handleChange} required /><br />\r\n          <input type=\"number\" name=\"Height\" placeholder=\"Height (cm)\" value={userData.Height} onChange={handleChange} required /><br />\r\n          <input type=\"number\" name=\"Weight\" placeholder=\"Weight (kg)\" value={userData.Weight} onChange={handleChange} required /><br />\r\n          <input type=\"number\" name=\"Duration\" placeholder=\"Duration (min)\" value={userData.Duration} onChange={handleChange} required /><br />\r\n          <input type=\"number\" name=\"Heart_Rate\" placeholder=\"Heart Rate\" value={userData.Heart_Rate} onChange={handleChange} required /><br />\r\n          <input type=\"number\" name=\"Body_Temp\" placeholder=\"Body Temperature\" value={userData.Body_Temp} onChange={handleChange} required /><br />\r\n\r\n          <button type=\"submit\">Save Data</button>\r\n        </form>\r\n\r\n        <div style={{ marginTop: '20px' }}>\r\n          <h2>Calculate Calories</h2>\r\n          <input\r\n            type=\"number\"\r\n            placeholder=\"Enter User ID\"\r\n            value={userId}\r\n            onChange={handleUserIdChange}\r\n            required\r\n          />\r\n          <button onClick={calculateResult}>Calculate</button>\r\n        </div>\r\n\r\n        {result && (\r\n          <div style={{\r\n            border: '1px solid #ccc',\r\n            padding: '10px',\r\n            marginTop: '10px',\r\n            borderRadius: '5px',\r\n            backgroundColor: '#f9f9f9',\r\n            width: '200px',\r\n            textAlign: 'center',\r\n          }}>\r\n            <span>{result}</span>\r\n          </div>\r\n        )}\r\n\r\n        <div style={{ marginTop: '40px', fontFamily: 'Arial', maxWidth: '600px' }}>\r\n          <h2>Diet Plan Generator</h2>\r\n\r\n          <div style={{ marginBottom: '15px' }}>\r\n            <label>Current Weight (kg): </label>\r\n            <input\r\n              type=\"number\"\r\n              value={currentWeight}\r\n              onChange={(e) => setCurrentWeight(e.target.value)}\r\n              style={{ padding: '8px', marginLeft: '10px' }}\r\n            />\r\n          </div>\r\n\r\n          <div style={{ marginBottom: '20px' }}>\r\n            <label>Target Weight (kg): </label>\r\n            <input\r\n              type=\"number\"\r\n              value={targetWeight}\r\n              onChange={(e) => setTargetWeight(e.target.value)}\r\n              style={{ padding: '8px', marginLeft: '23px' }}\r\n            />\r\n          </div>\r\n\r\n          <button onClick={handleDietQuery} style={{ padding: '10px 20px' }}>\r\n            Get Diet Plan\r\n          </button>\r\n\r\n          {displayedText && (\r\n            <div\r\n              style={{\r\n                marginTop: '30px',\r\n                padding: '15px',\r\n                backgroundColor: '#f9f9f9',\r\n                borderRadius: '8px',\r\n                fontSize: '17px',\r\n                minHeight: '60px',\r\n                lineHeight: '1.6',\r\n                whiteSpace: 'pre-wrap',\r\n              }}\r\n            >\r\n              {data.displayedText}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MainApp;\r\n"],"mappings":";;AAAA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAC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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}