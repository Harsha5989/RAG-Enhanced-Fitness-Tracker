{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dimaag\\\\Documents\\\\Python_Class\\\\ML\\\\Calorie-count-project\\\\frontend\\\\caloriecount\\\\src\\\\MainApp.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css'; // Make sure this import is present\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MainApp() {\n  _s();\n  const [userData, setUserData] = useState({\n    userId: '',\n    Gender: '',\n    Age: '',\n    Height: '',\n    Weight: '',\n    Duration: '',\n    Heart_Rate: '',\n    Body_Temp: ''\n  });\n  const [userId, setUserId] = useState('');\n  const [result, setResult] = useState(null);\n  const [currentWeight, setCurrentWeight] = useState('');\n  const [targetWeight, setTargetWeight] = useState('');\n  const [displayedText, setDisplayedText] = useState('');\n  const handleChange = e => {\n    setUserData({\n      ...userData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    fetch('http://192.168.50.179:5000/save', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(userData)\n    }).then(response => response.json()).then(data => {\n      alert(data.message);\n      setUserData({\n        userId: '',\n        Gender: '',\n        Age: '',\n        Height: '',\n        Weight: '',\n        Duration: '',\n        Heart_Rate: '',\n        Body_Temp: ''\n      });\n    }).catch(error => {\n      console.error('Error saving data!', error);\n      alert('Failed to save data.');\n    });\n  };\n  const handleUserIdChange = e => setUserId(e.target.value);\n  const calculateResult = () => {\n    axios.get(`http://192.168.50.179:5000/res?userId=${userId}`).then(response => {\n      if (response.data.result) {\n        setResult(response.data.result['0'] + ' calories');\n      } else {\n        setResult('No data found for this User ID');\n      }\n    }).catch(() => {\n      setResult('No data found for the provided UserId');\n    });\n  };\n  const handleDietQuery = async () => {\n    if (!currentWeight || !targetWeight) {\n      alert('Please enter both weights');\n      return;\n    }\n    const cw = parseFloat(currentWeight);\n    const tw = parseFloat(targetWeight);\n    if (isNaN(cw) || isNaN(tw)) {\n      alert('Weights must be valid numbers');\n      return;\n    }\n    const query = cw > tw ? 'What is the best diet plan for weight loss?' : 'What is the best diet plan for weight gain?';\n    try {\n      const response = await fetch('http://192.168.50.179:5000/query', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          query\n        })\n      });\n      const data = await response.json();\n      const words = data.result.split(' ');\n      setDisplayedText('');\n      let index = 0;\n      const interval = setInterval(() => {\n        if (index < words.length) {\n          setDisplayedText(prev => prev + words[index] + ' ');\n          index++;\n        } else {\n          clearInterval(interval);\n        }\n      }, 150);\n    } catch (error) {\n      console.error('Error fetching diet plan:', error);\n      setDisplayedText('Failed to fetch result.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Health Data Collection\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"form-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"userId\",\n        placeholder: \"User ID\",\n        value: userData.userId,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"Gender\",\n        value: userData.Gender,\n        onChange: handleChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Gender\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"0\",\n          children: \"0 (Women)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"1\",\n          children: \"1 (Men)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"Age\",\n        placeholder: \"Age\",\n        value: userData.Age,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"Height\",\n        placeholder: \"Height (cm)\",\n        value: userData.Height,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"Weight\",\n        placeholder: \"Weight (kg)\",\n        value: userData.Weight,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"Duration\",\n        placeholder: \"Duration (min)\",\n        value: userData.Duration,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"Heart_Rate\",\n        placeholder: \"Heart Rate\",\n        value: userData.Heart_Rate,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"Body_Temp\",\n        placeholder: \"Body Temperature\",\n        value: userData.Body_Temp,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Save Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calorie-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Calculate Calories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Enter User ID\",\n        value: userId,\n        onChange: handleUserIdChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: calculateResult,\n        children: \"Calculate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this), result && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result-box\",\n        children: result\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"diet-plan-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Diet Plan Generator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Current Weight (kg):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: currentWeight,\n          onChange: e => setCurrentWeight(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Target Weight (kg):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: targetWeight,\n          onChange: e => setTargetWeight(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDietQuery,\n        children: \"Get Diet Plan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this), displayedText && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"diet-result\",\n        children: displayedText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 7\n  }, this);\n}\n_s(MainApp, \"1DsWXWd4HNuqxqlYATY3sHE3Ut4=\");\n_c = MainApp;\nexport default MainApp;\nvar _c;\n$RefreshReg$(_c, \"MainApp\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","MainApp","_s","userData","setUserData","userId","Gender","Age","Height","Weight","Duration","Heart_Rate","Body_Temp","setUserId","result","setResult","currentWeight","setCurrentWeight","targetWeight","setTargetWeight","displayedText","setDisplayedText","handleChange","e","target","name","value","handleSubmit","preventDefault","fetch","method","headers","body","JSON","stringify","then","response","json","data","alert","message","catch","error","console","handleUserIdChange","calculateResult","get","handleDietQuery","cw","parseFloat","tw","isNaN","query","words","split","index","interval","setInterval","length","prev","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","required","onClick","_c","$RefreshReg$"],"sources":["C:/Users/dimaag/Documents/Python_Class/ML/Calorie-count-project/frontend/caloriecount/src/MainApp.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './App.css'; // Make sure this import is present\r\n\r\nfunction MainApp() {\r\n  const [userData, setUserData] = useState({\r\n    userId: '',\r\n    Gender: '',\r\n    Age: '',\r\n    Height: '',\r\n    Weight: '',\r\n    Duration: '',\r\n    Heart_Rate: '',\r\n    Body_Temp: '',\r\n  });\r\n\r\n  const [userId, setUserId] = useState('');\r\n  const [result, setResult] = useState(null);\r\n  const [currentWeight, setCurrentWeight] = useState('');\r\n  const [targetWeight, setTargetWeight] = useState('');\r\n  const [displayedText, setDisplayedText] = useState('');\r\n\r\n  const handleChange = (e) => {\r\n    setUserData({ ...userData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    fetch('http://192.168.50.179:5000/save', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(userData),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        alert(data.message);\r\n        setUserData({\r\n          userId: '',\r\n          Gender: '',\r\n          Age: '',\r\n          Height: '',\r\n          Weight: '',\r\n          Duration: '',\r\n          Heart_Rate: '',\r\n          Body_Temp: '',\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error saving data!', error);\r\n        alert('Failed to save data.');\r\n      });\r\n  };\r\n\r\n  const handleUserIdChange = (e) => setUserId(e.target.value);\r\n\r\n  const calculateResult = () => {\r\n    axios\r\n      .get(`http://192.168.50.179:5000/res?userId=${userId}`)\r\n      .then((response) => {\r\n        if (response.data.result) {\r\n          setResult(response.data.result['0'] + ' calories');\r\n        } else {\r\n          setResult('No data found for this User ID');\r\n        }\r\n      })\r\n      .catch(() => {\r\n        setResult('No data found for the provided UserId');\r\n      });\r\n  };\r\n\r\n  const handleDietQuery = async () => {\r\n    if (!currentWeight || !targetWeight) {\r\n      alert('Please enter both weights');\r\n      return;\r\n    }\r\n\r\n    const cw = parseFloat(currentWeight);\r\n    const tw = parseFloat(targetWeight);\r\n    if (isNaN(cw) || isNaN(tw)) {\r\n      alert('Weights must be valid numbers');\r\n      return;\r\n    }\r\n\r\n    const query =\r\n      cw > tw\r\n        ? 'What is the best diet plan for weight loss?'\r\n        : 'What is the best diet plan for weight gain?';\r\n\r\n    try {\r\n      const response = await fetch('http://192.168.50.179:5000/query', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ query }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      const words = data.result.split(' ');\r\n\r\n      setDisplayedText('');\r\n      let index = 0;\r\n      const interval = setInterval(() => {\r\n        if (index < words.length) {\r\n          setDisplayedText((prev) => prev + words[index] + ' ');\r\n          index++;\r\n        } else {\r\n          clearInterval(interval);\r\n        }\r\n      }, 150);\r\n    } catch (error) {\r\n      console.error('Error fetching diet plan:', error);\r\n      setDisplayedText('Failed to fetch result.');\r\n    }\r\n  };\r\n\r\n  return (\r\n  \r\n      <div className=\"container\">\r\n        <h1>Health Data Collection</h1>\r\n        <form onSubmit={handleSubmit} className=\"form-section\">\r\n          <input type=\"number\" name=\"userId\" placeholder=\"User ID\" value={userData.userId} onChange={handleChange} required />\r\n          <select name=\"Gender\" value={userData.Gender} onChange={handleChange}>\r\n            <option value=\"\">Gender</option>\r\n            <option value=\"0\">0 (Women)</option>\r\n            <option value=\"1\">1 (Men)</option>\r\n          </select>\r\n          <input type=\"number\" name=\"Age\" placeholder=\"Age\" value={userData.Age} onChange={handleChange} required />\r\n          <input type=\"number\" name=\"Height\" placeholder=\"Height (cm)\" value={userData.Height} onChange={handleChange} required />\r\n          <input type=\"number\" name=\"Weight\" placeholder=\"Weight (kg)\" value={userData.Weight} onChange={handleChange} required />\r\n          <input type=\"number\" name=\"Duration\" placeholder=\"Duration (min)\" value={userData.Duration} onChange={handleChange} required />\r\n          <input type=\"number\" name=\"Heart_Rate\" placeholder=\"Heart Rate\" value={userData.Heart_Rate} onChange={handleChange} required />\r\n          <input type=\"number\" name=\"Body_Temp\" placeholder=\"Body Temperature\" value={userData.Body_Temp} onChange={handleChange} required />\r\n          <button type=\"submit\">Save Data</button>\r\n        </form>\r\n\r\n        <div className=\"calorie-section\">\r\n          <h2>Calculate Calories</h2>\r\n          <input type=\"number\" placeholder=\"Enter User ID\" value={userId} onChange={handleUserIdChange} required />\r\n          <button onClick={calculateResult}>Calculate</button>\r\n          {result && <div className=\"result-box\">{result}</div>}\r\n        </div>\r\n\r\n        <div className=\"diet-plan-section\">\r\n          <h2>Diet Plan Generator</h2>\r\n          <div className=\"input-row\">\r\n            <label>Current Weight (kg):</label>\r\n            <input type=\"number\" value={currentWeight} onChange={(e) => setCurrentWeight(e.target.value)} />\r\n          </div>\r\n          <div className=\"input-row\">\r\n            <label>Target Weight (kg):</label>\r\n            <input type=\"number\" value={targetWeight} onChange={(e) => setTargetWeight(e.target.value)} />\r\n          </div>\r\n          <button onClick={handleDietQuery}>Get Diet Plan</button>\r\n\r\n          {displayedText && (\r\n            <div className=\"diet-result\">\r\n              {displayedText}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    \r\n    \r\n  );\r\n}\r\n\r\nexport default MainApp;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}