{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dimaag\\\\Documents\\\\Python_Class\\\\ML\\\\Calorie-count-project\\\\frontend\\\\caloriecount\\\\src\\\\App.js\";\n// import React, { useState } from 'react';\n// import axios from 'axios';\n\n// function App() {\n\n//   const [userData, setUserData] = useState({\n//     userId: '',\n//     Gender: '',\n//     Age: '',\n//     Height: '',\n//     Weight: '',\n//     Duration: '',\n//     Heart_Rate: '',\n//     Body_Temp: '',\n//   });\n\n//   const handleChange = (e) => {\n//     setUserData({\n//       ...userData,\n//       [e.target.name]: e.target.value,\n//     });\n//   };\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     // const resu = await axios.post('http://192.168.50.62:5000/save', { data: userData });\n//     fetch('http://127.0.0.1:5000/save', {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json',\n//       },\n//       body: JSON.stringify(userData), // Convert userData to JSON format\n//     })\n//       .then((response) => response.json()) // Parse the JSON response\n//       .then((data) => {\n//         if (data.success) {\n//           alert(data.message); // Show success message\n//         } else {\n//           alert(data.message); // Show error message if success is false\n//         }\n\n//         // Reset form fields after submission\n//         setUserData({\n//           userId: '',\n//           Gender: '',\n//           Age: '',\n//           Height: '',\n//           Weight: '',\n//           Duration: '',\n//           Heart_Rate: '',\n//           Body_Temp: '',\n//         });\n//       })\n//       .catch((error) => {\n//         console.error('There was an error saving the data!', error);\n//         alert('An error occurred while saving the data. Please try again.');\n//       });\n//   };\n\n//   const [userId, setUserId] = useState(\"\");\n//   const [result, setResult] = useState(null);\n\n//   const handleUserIdChange = (e) => {\n//     setUserId(e.target.value);\n//   };\n\n//   const calculateResult = () => {\n//     axios.get(`http://127.0.0.1:5000/res?userId=${userId}`)\n//       .then(response => {\n//         if (response.data.result) {\n//           setResult(response.data.result[\"0\"] + \" calories\");\n//         } else {\n//           setResult(\"No data found for this User ID\");\n//         }\n//       })\n//       .catch(error => {\n//         console.error(\"Error fetching data: \", error);\n//         setResult(\"No data found for the provided UserId\");\n//       });\n//   };\n\n//   const handleDietQuery = async () => {\n//   try {\n//     const response = await fetch('http://127.0.0.1:5000/query', {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json',\n//       },\n//       body: JSON.stringify({ query: 'What is the best diet for weight loss?' }),\n//     });\n\n//     const data = await response.json();\n//     console.log('Diet plan result:', data.result);  // Replace with UI display logic\n//     alert(`Response: ${data.result}`);  // For testing\n//   } catch (error) {\n//     console.error('Error fetching diet plan:', error);\n//   }\n// };\n\n//   return (\n//     <div>\n//       <nav className =\"navbar\">\n//         <span style={{ fontWeight: 'bold', fontSize: '100px' }}></span>\n//         <div>\n//           <a href=\"C://Users//dimaag//Documents//Python_Class//ML//Calorie-count-project//frontend//caloriecount//src//Home.js\" style={{ color: 'white', marginRight: '50px' }}>Home</a>\n//           <button onClick={handleDietQuery} style={{ color: 'white', marginRight: '50px', background: 'none', border: 'none', cursor: 'pointer' }}>\n//   Diet plan\n// </button>\n//         </div>\n//       </nav>\n\n//       <div style={{ padding: '20px' }}>\n//         <h1>Health Data Collection</h1>\n//         <form onSubmit={handleSubmit}>\n//           <input\n//             type=\"number\"\n//             name=\"userId\"\n//             placeholder=\"User ID\"\n//             value={userData.userId}\n//             onChange={handleChange}\n//             required\n//           /><br />\n\n//           <label htmlFor=\"dropdown\"></label>\n//           <select id=\"dropdown\"\n//             name='Gender' value={userData.Gender} onChange={handleChange}>\n//             <option value=\"\">Gender</option>\n//             <option value=\"0\">0 (women)</option>\n//             <option value=\"1\">1(men)</option>\n//           </select>\n//           <br />\n\n//           <input\n//             type=\"number\"\n//             name=\"Age\"\n//             placeholder=\"Age\"\n//             value={userData.Age}\n//             onChange={handleChange}\n//             required\n//           /><br />\n\n//           <input\n//             type=\"number\"\n//             name=\"Height\"\n//             placeholder=\"Height (cm)\"\n//             value={userData.Height}\n//             onChange={handleChange}\n//             required\n//           /><br />\n\n//           <input\n//             type=\"number\"\n//             name=\"Weight\"\n//             placeholder=\"Weight (kg)\"\n//             value={userData.Weight}\n//             onChange={handleChange}\n//             required\n//           /><br />\n\n//           <input\n//             type=\"number\"\n//             name=\"Duration\"\n//             placeholder=\"Duration (min)\"\n//             value={userData.Duration}\n//             onChange={handleChange}\n//             required\n//           /><br />\n\n//           <input\n//             type=\"number\"\n//             name=\"Heart_Rate\"\n//             placeholder=\"Heart Rate\"\n//             value={userData.Heart_Rate}\n//             onChange={handleChange}\n//             required\n//           /><br />\n\n//           <input\n//             type=\"number\"\n//             name=\"Body_Temp\"\n//             placeholder=\"Body Temperature\"\n//             value={userData.Body_Temp}\n//             onChange={handleChange}\n//             required\n//           /><br />\n\n//           <button type=\"submit\">Save Data</button>\n//         </form>\n\n//         <div style={{ marginTop: '20px' }}>\n//           <h2>Calculate Calories</h2>\n//           <input\n//             type=\"number\"\n//             placeholder=\"Enter User ID\"\n//             value={userId}\n//             onChange={handleUserIdChange}\n//             required\n//           />\n//           <button onClick={calculateResult}>Calculate</button>\n//         </div>\n\n//         {result && (\n//           <div style={{\n//             border: '1px solid #ccc',\n//             padding: '10px',\n//             marginTop: '10px',\n//             borderRadius: '5px',\n//             backgroundColor: '#f9f9f9',\n//             width: '200px',\n//             textAlign: 'center',\n//           }}>\n//             <span>{result}</span>\n//           </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport React from 'react';\nimport { BrowserRouter as Router, Routes, Route, Link } from 'react-router-dom';\nimport Home from './Home'; // Home.js component\nimport MainApp from './MainApp'; // Move your form + diet code to MainApp.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar\",\n      style: {\n        backgroundColor: '#white',\n        padding: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        style: {\n          color: 'white',\n          marginRight: '50px'\n        },\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/calorie\",\n        style: {\n          color: 'white'\n        },\n        children: \"Calorie App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/calorie\",\n        element: /*#__PURE__*/_jsxDEV(MainApp, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 233,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","BrowserRouter","Router","Routes","Route","Link","Home","MainApp","jsxDEV","_jsxDEV","App","children","className","style","backgroundColor","padding","to","color","marginRight","fileName","_jsxFileName","lineNumber","columnNumber","path","element","_c","$RefreshReg$"],"sources":["C:/Users/dimaag/Documents/Python_Class/ML/Calorie-count-project/frontend/caloriecount/src/App.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import axios from 'axios';\r\n\r\n\r\n\r\n// function App() {\r\n\r\n//   const [userData, setUserData] = useState({\r\n//     userId: '',\r\n//     Gender: '',\r\n//     Age: '',\r\n//     Height: '',\r\n//     Weight: '',\r\n//     Duration: '',\r\n//     Heart_Rate: '',\r\n//     Body_Temp: '',\r\n//   });\r\n\r\n//   const handleChange = (e) => {\r\n//     setUserData({\r\n//       ...userData,\r\n//       [e.target.name]: e.target.value,\r\n//     });\r\n//   };\r\n\r\n//   const handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n//     // const resu = await axios.post('http://192.168.50.62:5000/save', { data: userData });\r\n//     fetch('http://127.0.0.1:5000/save', {\r\n//       method: 'POST',\r\n//       headers: {\r\n//         'Content-Type': 'application/json',\r\n//       },\r\n//       body: JSON.stringify(userData), // Convert userData to JSON format\r\n//     })\r\n//       .then((response) => response.json()) // Parse the JSON response\r\n//       .then((data) => {\r\n//         if (data.success) {\r\n//           alert(data.message); // Show success message\r\n//         } else {\r\n//           alert(data.message); // Show error message if success is false\r\n//         }\r\n\r\n//         // Reset form fields after submission\r\n//         setUserData({\r\n//           userId: '',\r\n//           Gender: '',\r\n//           Age: '',\r\n//           Height: '',\r\n//           Weight: '',\r\n//           Duration: '',\r\n//           Heart_Rate: '',\r\n//           Body_Temp: '',\r\n//         });\r\n//       })\r\n//       .catch((error) => {\r\n//         console.error('There was an error saving the data!', error);\r\n//         alert('An error occurred while saving the data. Please try again.');\r\n//       });\r\n//   };\r\n\r\n//   const [userId, setUserId] = useState(\"\");\r\n//   const [result, setResult] = useState(null);\r\n\r\n//   const handleUserIdChange = (e) => {\r\n//     setUserId(e.target.value);\r\n//   };\r\n\r\n//   const calculateResult = () => {\r\n//     axios.get(`http://127.0.0.1:5000/res?userId=${userId}`)\r\n//       .then(response => {\r\n//         if (response.data.result) {\r\n//           setResult(response.data.result[\"0\"] + \" calories\");\r\n//         } else {\r\n//           setResult(\"No data found for this User ID\");\r\n//         }\r\n//       })\r\n//       .catch(error => {\r\n//         console.error(\"Error fetching data: \", error);\r\n//         setResult(\"No data found for the provided UserId\");\r\n//       });\r\n//   };\r\n\r\n//   const handleDietQuery = async () => {\r\n//   try {\r\n//     const response = await fetch('http://127.0.0.1:5000/query', {\r\n//       method: 'POST',\r\n//       headers: {\r\n//         'Content-Type': 'application/json',\r\n//       },\r\n//       body: JSON.stringify({ query: 'What is the best diet for weight loss?' }),\r\n//     });\r\n\r\n//     const data = await response.json();\r\n//     console.log('Diet plan result:', data.result);  // Replace with UI display logic\r\n//     alert(`Response: ${data.result}`);  // For testing\r\n//   } catch (error) {\r\n//     console.error('Error fetching diet plan:', error);\r\n//   }\r\n// };\r\n\r\n\r\n\r\n//   return (\r\n//     <div>\r\n//       <nav className =\"navbar\">\r\n//         <span style={{ fontWeight: 'bold', fontSize: '100px' }}></span>\r\n//         <div>\r\n//           <a href=\"C://Users//dimaag//Documents//Python_Class//ML//Calorie-count-project//frontend//caloriecount//src//Home.js\" style={{ color: 'white', marginRight: '50px' }}>Home</a>\r\n//           <button onClick={handleDietQuery} style={{ color: 'white', marginRight: '50px', background: 'none', border: 'none', cursor: 'pointer' }}>\r\n//   Diet plan\r\n// </button>\r\n//         </div>\r\n//       </nav>\r\n    \r\n//       <div style={{ padding: '20px' }}>\r\n//         <h1>Health Data Collection</h1>\r\n//         <form onSubmit={handleSubmit}>\r\n//           <input\r\n//             type=\"number\"\r\n//             name=\"userId\"\r\n//             placeholder=\"User ID\"\r\n//             value={userData.userId}\r\n//             onChange={handleChange}\r\n//             required\r\n//           /><br />\r\n\r\n//           <label htmlFor=\"dropdown\"></label>\r\n//           <select id=\"dropdown\"\r\n//             name='Gender' value={userData.Gender} onChange={handleChange}>\r\n//             <option value=\"\">Gender</option>\r\n//             <option value=\"0\">0 (women)</option>\r\n//             <option value=\"1\">1(men)</option>\r\n//           </select>\r\n//           <br />\r\n\r\n//           <input\r\n//             type=\"number\"\r\n//             name=\"Age\"\r\n//             placeholder=\"Age\"\r\n//             value={userData.Age}\r\n//             onChange={handleChange}\r\n//             required\r\n//           /><br />\r\n\r\n//           <input\r\n//             type=\"number\"\r\n//             name=\"Height\"\r\n//             placeholder=\"Height (cm)\"\r\n//             value={userData.Height}\r\n//             onChange={handleChange}\r\n//             required\r\n//           /><br />\r\n\r\n//           <input\r\n//             type=\"number\"\r\n//             name=\"Weight\"\r\n//             placeholder=\"Weight (kg)\"\r\n//             value={userData.Weight}\r\n//             onChange={handleChange}\r\n//             required\r\n//           /><br />\r\n\r\n//           <input\r\n//             type=\"number\"\r\n//             name=\"Duration\"\r\n//             placeholder=\"Duration (min)\"\r\n//             value={userData.Duration}\r\n//             onChange={handleChange}\r\n//             required\r\n//           /><br />\r\n\r\n//           <input\r\n//             type=\"number\"\r\n//             name=\"Heart_Rate\"\r\n//             placeholder=\"Heart Rate\"\r\n//             value={userData.Heart_Rate}\r\n//             onChange={handleChange}\r\n//             required\r\n//           /><br />\r\n\r\n//           <input\r\n//             type=\"number\"\r\n//             name=\"Body_Temp\"\r\n//             placeholder=\"Body Temperature\"\r\n//             value={userData.Body_Temp}\r\n//             onChange={handleChange}\r\n//             required\r\n//           /><br />\r\n\r\n//           <button type=\"submit\">Save Data</button>\r\n//         </form>\r\n\r\n//         <div style={{ marginTop: '20px' }}>\r\n//           <h2>Calculate Calories</h2>\r\n//           <input\r\n//             type=\"number\"\r\n//             placeholder=\"Enter User ID\"\r\n//             value={userId}\r\n//             onChange={handleUserIdChange}\r\n//             required\r\n//           />\r\n//           <button onClick={calculateResult}>Calculate</button>\r\n//         </div>\r\n\r\n//         {result && (\r\n//           <div style={{\r\n//             border: '1px solid #ccc',\r\n//             padding: '10px',\r\n//             marginTop: '10px',\r\n//             borderRadius: '5px',\r\n//             backgroundColor: '#f9f9f9',\r\n//             width: '200px',\r\n//             textAlign: 'center',\r\n//           }}>\r\n//             <span>{result}</span>\r\n//           </div>\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default App;\r\n\r\nimport React from 'react';\r\nimport { BrowserRouter as Router, Routes, Route, Link } from 'react-router-dom';\r\nimport Home from './Home';      // Home.js component\r\nimport MainApp from './MainApp'; // Move your form + diet code to MainApp.js\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <nav className=\"navbar\" style={{ backgroundColor: '#white', padding: '10px' }}>\r\n        <Link to=\"/\" style={{ color: 'white', marginRight: '50px' }}>Home</Link>\r\n        <Link to=\"/calorie\" style={{ color: 'white' }}>Calorie App</Link>\r\n      </nav>\r\n      <Routes>\r\n        <Route path=\"/\" element={<Home />} />\r\n        <Route path=\"/calorie\" element={<MainApp />} />\r\n      </Routes>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":";AAAA;AACA;;AAIA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,IAAIC,MAAM,EAAEC,MAAM,EAAEC,KAAK,EAAEC,IAAI,QAAQ,kBAAkB;AAC/E,OAAOC,IAAI,MAAM,QAAQ,CAAC,CAAM;AAChC,OAAOC,OAAO,MAAM,WAAW,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,GAAGA,CAAA,EAAG;EACb,oBACED,OAAA,CAACP,MAAM;IAAAS,QAAA,gBACLF,OAAA;MAAKG,SAAS,EAAC,QAAQ;MAACC,KAAK,EAAE;QAAEC,eAAe,EAAE,QAAQ;QAAEC,OAAO,EAAE;MAAO,CAAE;MAAAJ,QAAA,gBAC5EF,OAAA,CAACJ,IAAI;QAACW,EAAE,EAAC,GAAG;QAACH,KAAK,EAAE;UAAEI,KAAK,EAAE,OAAO;UAAEC,WAAW,EAAE;QAAO,CAAE;QAAAP,QAAA,EAAC;MAAI;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACxEb,OAAA,CAACJ,IAAI;QAACW,EAAE,EAAC,UAAU;QAACH,KAAK,EAAE;UAAEI,KAAK,EAAE;QAAQ,CAAE;QAAAN,QAAA,EAAC;MAAW;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9D,CAAC,eACNb,OAAA,CAACN,MAAM;MAAAQ,QAAA,gBACLF,OAAA,CAACL,KAAK;QAACmB,IAAI,EAAC,GAAG;QAACC,OAAO,eAAEf,OAAA,CAACH,IAAI;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACrCb,OAAA,CAACL,KAAK;QAACmB,IAAI,EAAC,UAAU;QAACC,OAAO,eAAEf,OAAA,CAACF,OAAO;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEb;AAACG,EAAA,GAbQf,GAAG;AAeZ,eAAeA,GAAG;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}